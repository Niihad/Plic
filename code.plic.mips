# zone de reservation de memoire

	# initialise s7 avec sp 
	move $s7,$sp 
	# reserve les zones memoire des variables 
	addi $sp ,$sp,-4 
	addi $sp ,$sp,-4 

# zone programme

	# Range 12 dans $v0 et l'empile
	li $v0, 12
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Affectation de a a la valeur de 12
	add $sp,$sp,4 
	lw $v0,($sp) 
	sw $v0,0($s7)

	# Range valeur de a dans $v0 et l'empile
	lw $v0,0($s7)
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Range 12 dans $v0 et l'empile
	li $v0, 12
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Compare (a == 12)
	add $sp,$sp,4
	lw $v0,($sp)
	add $sp,$sp,4
	lw $t8,($sp)
	bne $v0,$t8 sinon1
	alors1:
	li $v0, 1
	sw $v0,0($sp)
	add $sp,$sp,-4
	j finsi1
	sinon1:
	li $v0, 0
	sw $v0,0($sp)
	add $sp,$sp,-4
	finsi1:

    # Conditionnelle de (a == 12)
    add $sp,$sp,4 
	lw $v0,($sp) 
    si0: blez $v0, finsi0
    alors0:
        
	# Range 13 dans $v0 et l'empile
	li $v0, 13
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Affectation de a a la valeur de 13
	add $sp,$sp,4 
	lw $v0,($sp) 
	sw $v0,0($s7)
    j finsi0
finsi0:
	# Ecrire a
	# Range valeur de a dans $v0 et l'empile
	lw $v0,0($s7)
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	add $sp,$sp,4 
	li $v0, 1 
	lw $a0,($sp) 
	syscall
