# zone de reservation de memoire

	# initialise s7 avec sp 
	move $s7,$sp 
	# reserve les zones memoire des variables 
	addi $sp ,$sp,-4 

# zone programme

	# Range 10 dans $v0 et l'empile
	li $v0, 10
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Affectation de a a la valeur de 10
	add $sp,$sp,4 
	lw $v0,($sp) 
	sw $v0,0($s7)

	# Range valeur de a dans $v0 et l'empile
	lw $v0,0($s7)
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Range 10 dans $v0 et l'empile
	li $v0, 10
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Compare (a == 10)
	add $sp,$sp,4
	lw $v0,($sp)
	add $sp,$sp,4
	lw $t8,($sp)
	bne $v0,$t8 sinon1
	alors1:
	li $v0, 1
	sw $v0,0($sp)
	add $sp,$sp,-4
	j finsi1
	sinon1:
	li $v0, 0
	sw $v0,0($sp)
	add $sp,$sp,-4
	finsi1:

	# Conditionnelle de (a == 10)
	add $sp,$sp,4 
	si2: bgez $sp, sinon2
	alors2:
		# zone de reservation de memoire

	# initialise s7 avec sp 
	move $s7,$sp 
	# reserve les zones memoire des variables 
	addi $sp ,$sp,-4 

# zone programme

	# Range 8 dans $v0 et l'empile
	li $v0, 8
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Affectation de a a la valeur de 8
	add $sp,$sp,4 
	lw $v0,($sp) 
	sw $v0,0($s7)

end :
	move $v1, $v0	# copie de v0 dans v1 pour permettre les tests de plic
	li $v0, 10	# retour au systeme
	syscall
	j finsi2
	sinon2:
		# zone de reservation de memoire

	# initialise s7 avec sp 
	move $s7,$sp 
	# reserve les zones memoire des variables 
	addi $sp ,$sp,-4 

# zone programme

	# Range 12 dans $v0 et l'empile
	li $v0, 12
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	# Affectation de a a la valeur de 12
	add $sp,$sp,4 
	lw $v0,($sp) 
	sw $v0,0($s7)

end :
	move $v1, $v0	# copie de v0 dans v1 pour permettre les tests de plic
	li $v0, 10	# retour au systeme
	syscall

	finsi2:
	# Ecrire a
	# Range valeur de a dans $v0 et l'empile
	lw $v0,0($s7)
	sw $v0,($sp) 
	add $sp ,$sp,-4 

	add $sp,$sp,4 
	li $v0, 1 
	lw $a0,($sp) 
	syscall

end :
	move $v1, $v0	# copie de v0 dans v1 pour permettre les tests de plic
	li $v0, 10	# retour au systeme
	syscall
